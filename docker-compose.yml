version: '3'

services:
  # FastAPI / Starlette
  api:
    build: ./server
    ports:
      - 8888:80
    volumes:
      - ./server:/app/
      - model_data:/var/lib/model_data/
    environment:
      - DATABASE_URL=postgresql://${DATABASE_USER}:${DATABASE_PASS}@postgres_db:5432/${DATABASE_NAME}
      - APP_URL=${APP_URL}
      - API_URL=${API_URL}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - TOKEN_SECRET=${TOKEN_SECRET}
    logging:
      driver: loki
      options:
        loki-url: 'http://localhost:3100/loki/api/v1/push'
    # depends_on: loki

  # PostgreSQL database
  postgres_db:
    image: sameersbn/postgresql:10-1
    volumes:
      - postgres_db_data:/var/lib/postgresql
    ports:
      - '7432:5432'
    environment:
      DB_USER: ${DATABASE_USER}
      DB_PASS: ${DATABASE_PASS}
      DB_NAME: ${DATABASE_NAME}

  # Log Aggregation.
  promtail:
    image: grafana/promtail:1.5.0
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/docker-config.yaml

  loki:
    image: grafana/loki:1.5.0
    ports:
      - '3100:3100'
    command: -config.file=/etc/loki/local-config.yaml

  grafana:
    image: grafana/grafana:master
    ports:
      - '3300:3000'
    depends_on:
      - loki

volumes:
  postgres_db_data: # PostgreSQL data volume
  model_data:
